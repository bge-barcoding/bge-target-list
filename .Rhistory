## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub('"\t"', '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub('"\t"', '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8")
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('/data/input_files/NSR_taxonomy1.csv')
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub('"\t"', '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub('"\t"', '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8")
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('/data/input_files/NSR_taxonomy1.csv')
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('/data/input_files/NSR_taxonomy1.csv')
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub('"\t"', '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub('"\t"', '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('/data/insert_files/nsr_species.csv'), fileEncoding="utf-8")
nsrTaxonomy.file <- sprintf('/data/input_files/NSR_taxonomy1.csv')
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
REPO_HOME
setwd('..')
REPO_HOME <- paste(dirname(getwd()), sep = "")
REPO_HOME
setwd("~/Bioinformatica/Github/internship-dna-barcodes/scripts/data_extraction")
REPO_HOME <- paste(dirname(getwd()), sep = "")
REPO_HOME
setwd('..')
REPO_HOME <- paste(dirname(getwd()), sep = "")
REPO_HOME
setwd('..')
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy1.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub('"\t"', '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub('"\t"', '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8")
## Temp: Check what the differences are from B. Ankers to this one.
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8", row.names = FALSE)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy1.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub("\t", '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub('"\t"', '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8", row.names = FALSE)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy1.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub("\t", '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub("\t", '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8", row.names = FALSE)
## Removed the last empty row by hand (error)
nsrSynonyms.file <- sprintf('%s/data/input_files/NSR_synonyms.csv', REPO_HOME)
## Skip first few lines untill header
nsrSynonyms <- read.csv(nsrSynonyms.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrSynonyms <- subset(nsrSynonyms, select = c(1,3,4)) %>% filter(language == "Scientific")
## Split genus, species and identification reference
synonym_df <- str_split_fixed(nsrSynonyms$synonym, " ", 3)
taxon_df <- str_split_fixed(nsrSynonyms$taxon, " ", 3)
## Drop empty lines (CHECK)
nsrSynonyms <- as.data.frame(cbind(synonym_df, taxon_df)) %>% drop_na()
nsrSynonyms$synonym_name <- paste(nsrSynonyms$V1, nsrSynonyms$V2)
nsrSynonyms$identification_reference <- nsrSynonyms$V3
nsrSynonyms$taxon_name <- paste(nsrSynonyms$V4, nsrSynonyms$V5)
nsrSynonyms$taxon_author <- nsrSynonyms$V6
nsrSynonyms <- subset(nsrSynonyms, select = c("synonym_name", "identification_reference", "taxon_name", "taxon_author"))
## Remove parentheses for every identification reference
nsrSynonyms$identification_reference <- gsub('[()]','', nsrSynonyms$identification_reference)
nsrSynonyms$taxon_author <- gsub('[()]','', nsrSynonyms$taxon_author)
## Keep rows where species do not dots or parenthesis in their name
nsrSynonyms <-  nsrSynonyms[grep('[()\\.]', nsrSynonyms$synonym_name, invert = TRUE),]
nsrSynonyms <- nsrSynonyms[grep('[()\\.]', nsrSynonyms$taxon_name, invert = TRUE),]
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrSynonyms <-  nsrSynonyms[grep('[\\[\\]]', nsrSynonyms$identification_reference, invert = TRUE),]
nsrSynonyms <-  nsrSynonyms[grep('[\\[\\]', nsrSynonyms$taxon_author, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrSynonyms <- nsrSynonyms  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrSynonyms <- na.omit(nsrSynonyms)
## Add unique identifier counting from 1
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsr_table <- inner_join(nsrSynonyms, nsrSpecies, by=c("taxon_name"="species_name",
"taxon_author"="identification_reference"))
View(nsr_table)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub("\t", '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub("\t", '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8", row.names = FALSE)
View(nsrTaxonomy)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy1.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub("\t", '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub("\t", '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8", row.names = FALSE)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub("\t", '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub("\t", '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8", row.names
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub("\t", '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub("\t", '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8", row.names = FALSE)
View(nsrSpecies)
View(nsrTaxonomy)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
View(nsrTaxonomy)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,4,6))
View(nsrTaxonomy)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,3))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub("\t", '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub("\t", '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8", row.names = FALSE)
View(nsrTaxonomy)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,3))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
View(nsrTaxonomy)
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 3)
View(nsrTaxonomy)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,3))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 2)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,3))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,3))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 4)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,3))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name., " ", 1)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,3))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name, " ", 2)
## Removed the last empty row by hand (error)
nsrTaxonomy.file <- sprintf('%s/data/input_files/NSR_taxonomy.csv', REPO_HOME)
## Skip first few lines untill header
nsrTaxonomy <- read.csv(nsrTaxonomy.file, encoding="UTF-8", skip = 4, sep = "\t",  na.strings="NA")
## Get the necessary rows (scientific_name, common_name, rank, nsr_id)
nsrTaxonomy <- subset(nsrTaxonomy, select = c(1,2,3))
nsrTaxonomy <- nsrTaxonomy %>% filter(rank == "soort")
## Split genus, species and identification reference
nsrTaxonomy <- str_split_fixed(nsrTaxonomy$scientific_name, " ", 3)
## Drop empty lines (CHECK)
nsrTaxonomy <- as.data.frame(nsrTaxonomy) %>% drop_na()
## Give columnnames
colnames(nsrTaxonomy) <- c("genus", "species", "identification_reference")
## Remove parentheses for every identification reference
nsrTaxonomy$identification_reference <- gsub('[()]','',nsrTaxonomy$identification_reference)
## Merge the genus and species to binomial in new column
nsrTaxonomy$species_name <- paste(nsrTaxonomy$genus, nsrTaxonomy$species)
## Keep rows where species do not dots or parenthesis in their name
nsrTaxonomy <-  nsrTaxonomy[grep('[()\\.]', nsrTaxonomy$species, invert = TRUE),]
## Remove the × symbol in species_name from all the rows (are there for three species names)
nsrTaxonomy$species_name <- gsub('[\\×]','',nsrTaxonomy$species_name)
## Keep rows where identification references do not have [] in their name (for an instance with [unknown])
nsrTaxonomy <-  nsrTaxonomy[grep('[\\[\\]', nsrTaxonomy$identification_reference, invert = TRUE),]
## Fill empty strings with NA's so these rows can be dropped
nsrTaxonomy <- nsrTaxonomy  %>% mutate_all(na_if,"")
## Drop rows containing NA's
nsrTaxonomy <- na.omit(nsrTaxonomy)
## Add unique identifier counting from 0
nsrTaxonomy$species_id <- seq.int(from = 0, to = nrow(nsrTaxonomy)-1)
## Keep and rearrange columns (species_id, species_name, identification_reference)
nsrSpecies <- subset(nsrTaxonomy, select = c(5, 4, 3))
nsrSpecies$species_name <- gsub("\t", '', nsrSpecies$species_name)
nsrSpecies$identification_reference <- gsub("\t", '', nsrSpecies$identification_reference)
write.csv(nsrSpecies, file=sprintf('%s/data/insert_files/nsr_species.csv', REPO_HOME), fileEncoding="utf-8", row.names = FALSE)
View(natSpecies)
View(nsrSpecies)
